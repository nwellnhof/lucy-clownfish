# ***********************************************
# 
# !!!! DO NOT EDIT !!!!
# 
# This file was auto-generated by Build.PL.
# 
# ***********************************************
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=encoding utf8

=head1 NAME

Clownfish::HashIterator - Hashtable Iterator.

=head1 SYNOPSIS

    my $iter = Clownfish::HashIterator->new($hash);
    while ($iter->next) {
        my $key   = $iter->get_key;
        my $value = $iter->get_value;
    }

=head1 DESCRIPTION

=head1 CONSTRUCTORS

=head2 new

    my $iter = Clownfish::HashIterator->new($hash);

Return a HashIterator for the passed-in Hash.

=head1 METHODS

=head2 next

    $hash_iterator->next();

Advance the iterator to the next key-value pair.

Returns: true if there’s another key-value pair, false if the iterator
is exhausted.

=head2 get_key

    $hash_iterator->get_key();

Return the key of the current key-value pair.  It’s not allowed to
call this method before L<next()|/next> was called for the first time or
after the iterator was exhausted.

=head2 get_value

    $hash_iterator->get_value();

Return the value of the current key-value pair.  It’s not allowed to
call this method before L<next()|/next> was called for the first time or
after the iterator was exhausted.

=head1 INHERITANCE

Clownfish::HashIterator isa L<Clownfish::Obj>.

=cut

