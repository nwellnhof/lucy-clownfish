# ***********************************************
# 
# !!!! DO NOT EDIT !!!!
# 
# This file was auto-generated by Build.PL.
# 
# ***********************************************
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=encoding utf8

=head1 NAME

Clownfish::Integer - Immutable 64-bit signed integer.

=head1 SYNOPSIS

    my $integer = Clownfish::Integer->new(7);
    my $value = $integer->get_value;

=head1 DESCRIPTION

=head1 CONSTRUCTORS

=head2 new

    my $integer = Clownfish::Integer->new($value);

Return a new Integer.

=over

=item *

B<value> - Initial value.

=back

=head1 METHODS

=head2 get_value

    $integer->get_value();

Return the value of the Integer.

=head2 to_f64

    $integer->to_f64();

Convert the Integer to floating point.

=head2 compare_to

    $integer->compare_to($other);

Indicate whether one number is less than, equal to, or greater than
another.  Throws an exception if C<other> is neither an Integer nor a
Float.

Returns: 0 if the numbers are equal, a negative number if C<self> is
less than C<other>, and a positive number if C<self> is greater than
C<other>.

=head2 clone

    $integer->clone();

Return a clone of the object.

=head1 INHERITANCE

Clownfish::Integer isa L<Clownfish::Obj>.

=cut

